<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:ldap="http://www.springframework.org/schema/ldap" 
    xmlns:p="http://www.springframework.org/schema/p"   
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/ldap http://www.springframework.org/schema/ldap/spring-ldap.xsd">

	<context:component-scan base-package="com.maxis.gamingportal"/>
	<context:property-placeholder location="classpath*:report.properties"/>
	<task:annotation-driven scheduler="reportScheduler"/>
	<task:scheduler id="reportScheduler" pool-size="10"/>
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
    </mvc:annotation-driven>	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    	<!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->
    	<property name="favorPathExtension" value="false" />
	</bean>    
	
	<!-- Apache Tiles -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<value>/WEB-INF/layouts/views.xml</value>
			</list>
		</property>
	</bean>	
	
	<!-- JNDI datasource -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="jdbc/hotlinkgame"/>
    </bean>	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
		<property name="dataSource" ref="dataSource"></property>  
	</bean>
	
    <!-- Spring PlatformTransactionManager -->
    <tx:annotation-driven transaction-manager="txManager" />	
    <!--Database Transaction Manager -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>    	
    
    <!--Advice for rolling back transaction on RuntimeException -->
    <tx:advice id="txAdvice"  transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.maxis.gamingportal.service..Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>   	
	
	<!-- Ldap connection -->
	<bean id="contextSource"
	        class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
	  <constructor-arg value="${ldap.url}/${ldap.base}"/>
	  <property name="userDn" value="${ldap.user}"/>
	  <property name="password" value="${ldap.passwd}"/>
	</bean>	
    <bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <constructor-arg ref="contextSource" />
    </bean> 
    
   <!--bean id="txAdManager" class="org.springframework.ldap.transaction.compensating.manager.ContextSourceTransactionManager">
      <property name="contextSource" ref="contextSource" />
   </bean-->     	
	
	<!-- Batch Job Repository -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="sqlserver" />
		<property name="tablePrefix" value="batch_" />
	</bean>	
	
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
		
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>		
	
	<batch:job id="dailyReportJob">
	  <batch:step id="extractReport">
	  	<batch:tasklet ref="reportExtractTask"/>
	  </batch:step>
	</batch:job>	
	
	<bean id="reportExtractTask" class="com.maxis.gamingportal.report.ReportExtractTask"/>	

</beans>